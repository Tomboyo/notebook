#!/bin/bash

set -eo pipefail

function usage {
    echo "build [-c|--clean] [-s|--serve] [-h|--help]"
    echo
    echo "Build the project."
    echo
    echo "  -c, --clean: Delete the target directory before compiling."
    echo "  -s, --serve: Start a python http.server instance in the target "
    echo "               directoy to serve compiled documents."
    echo "  -h, --help:  Display this message."
    echo
}

BASEDIR=$(realpath $(dirname "$0"))
BINDIR="$BASEDIR/bin"

CLEAN=""
SERVE=""
while [[ $# -gt 0 ]] ; do
    key="$1"
    case $key in
        -c|--clean)
            CLEAN="true"
            shift
            ;;
        -s|--serve)
            SERVE="true"
            shift
            ;;
        -h|--help)
            usage
            exit
            ;;
        *)
            echo "unexpected argument $1"
            usage
            exit 1
            ;;
    esac
done

if [[ $CLEAN == "true" ]] ; then
    echo "CLEAN $BASEDIR/target..."

    rm -rf "$BASEDIR/target"
fi

echo "BUILD..."
if [[ ! -d ./target/pre ]] ; then
    mkdir -p target/pre
fi
cp src/adoc/*.adoc target/pre
echo "PRECOMPILE..."
bin/precompile
echo "COMPILE..."
find target/pre -type f -exec \
    asciidoctor -r asciidoctor-diagram -D target {} ';'

if [[ $SERVE == "true" ]] ; then
    echo "SERVE..."
    "$BINDIR/serve"
fi
